# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

#application context
#play.http.context = "/m"

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

ix {
   base = "curator.ix"
   
   # these paths are relative to {ix.home}
   data = "data.db"
   hash = "hash.db"

   quartz {
     # this must be absolute or explicitly include .
     file = "./"${ix.base}"/quartz"
     init = "quartz_h2.sql"
     threads = "10"
   }

   cache {
      maxElements = 50000
      timeToLive = 7200
      timeToIdle = 7200
   }
}

db.quartz.driver=org.h2.Driver
db.quartz.url="jdbc:h2:"${ix.quartz.file}";MVCC=TRUE;CACHE_SIZE=131072;"
db.quartz.username=sa
db.quartz.password=""
